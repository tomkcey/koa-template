services:
    web:
        build:
            context: .
            dockerfile: Dockerfile
            target: server
        ports:
            - "8000:8000"
        env_file:
            - .env
        depends_on:
            postgresql:
                condition: service_healthy
    postgresql:
        image: postgres
        environment:
            POSTGRES_USER: localuser
            POSTGRES_PASSWORD: localpass
            PGPASSWORD: localpass
        ports:
            - "5432:5432"
        depends_on:
            rabbitmq:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "localuser"]
            interval: 3s
            timeout: 3s
            retries: 3
    redis:
        image: "redis"
        ports:
            - "6379:6379"
        depends_on:
            rabbitmq:
                condition: service_healthy
    rabbitmq:
        image: "rabbitmq:3-management"
        environment:
            - RABBITMQ_DEFAULT_USER=localuser
            - RABBITMQ_DEFAULT_PASS=localpass
        ports:
            - "5672:5672"
            - "15672:15672"
        healthcheck:
            test: rabbitmq-diagnostics -q ping
            interval: 3s
            timeout: 3s
            retries: 3
    minio:
        image: "quay.io/minio/minio"
        command: server /data --console-address ":9001"
        environment:
            MINIO_ROOT_USER: localuser
            MINIO_ROOT_PASSWORD: localpass
        ports:
            - "9000:9000"
            - "9001:9001"
        depends_on:
            rabbitmq:
                condition: service_healthy
    jaeger:
        image: "jaegertracing/all-in-one"
        environment:
            COLLECTOR_OTLP_ENABLED: "true"
        ports:
            - "16686:16686"
            - "14268:14268"
            - "14269:14269"
            - "14250:14250"
            - "9411:9411"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
            - "4317:4317"
            - "4318:4318"
        depends_on:
            rabbitmq:
                condition: service_healthy
